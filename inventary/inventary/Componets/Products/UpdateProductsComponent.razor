@using Bussiness
@using Entities
@inject B_Product Bproduct
@inject B_Category Bcategory

@inject NavigationManager NavManager


<EditForm Model="oProducto">
    <div class="form-group">
        <label>Producto: </label>
        <InputText class="form-control" @bind-Value="oProducto.Name" />
    </div>
    <div class="form-group">
        <label>Descripcion: </label>
        <InputTextArea class="form-control" @bind-Value="oProducto.Description" />
    </div>
    <div class="form-group">
        <label>Categoria: </label>
        <InputSelect class="form-control" @bind-Value="oProducto.CategoryId">
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.CategoryName</option>
            }
        </InputSelect>
    </div>
    <div class="text-center mt-3">
        <input class="btn btn-success" type="button" value="Actualizar Producto" @onclick="UpdateProduct"/>
    </div>

</EditForm>

@code {

    [Parameter]                        
    public string IdProduct { get; set; }

    ProductsEntity oProducto = new ProductsEntity();

    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = await Bcategory.CategoryList();
        oProducto = Bproduct.ProductById(IdProduct);
    }

    private void UpdateProduct()
    {
        Bproduct.UpdateProducto(oProducto);
        NavManager.NavigateTo("productos/lista");
    }


}
